(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

/* jshint browser: true */
/*jshint unused:false*/

(function () {

    'use strict';

    // Feature Test

    if ('querySelector' in document && 'addEventListener' in window && Array.prototype.forEach) {
        (function () {

            // Function to toggle menu mobile
            var actionMenu = function actionMenu() {
                document.getElementById("gg-menu").classList.toggle("open");
                document.getElementById("gg-menu-mobile").classList.toggle("opened");
            };

            document.getElementById("gg-menu-mobile").addEventListener("click", actionMenu);

            // Function to animate the scroll
            var smoothScroll = function smoothScroll(anchor, duration) {

                // Calculate how far and how fast to scroll
                var startLocation = window.pageYOffset;
                var endLocation = anchor.offsetTop;
                var distance = endLocation - startLocation;
                var increments = distance / (duration / 16);
                var stopAnimation = void 0;

                // Scroll the page by an increment, and check if it's time to stop
                var animateScroll = function animateScroll() {
                    window.scrollBy(0, increments);
                    stopAnimation();
                };

                // If scrolling down
                if (increments >= 0) {
                    // Stop animation when you reach the anchor OR the bottom of the page
                    stopAnimation = function stopAnimation() {
                        var travelled = window.pageYOffset;
                        if (travelled >= endLocation - increments || window.innerHeight + travelled >= document.body.offsetHeight) {
                            clearInterval(runAnimation);
                        }
                    };
                }
                // If scrolling up
                else {
                        // Stop animation when you reach the anchor OR the top of the page
                        stopAnimation = function stopAnimation() {
                            var travelled = window.pageYOffset;
                            if (travelled <= (endLocation || 0)) {
                                clearInterval(runAnimation);
                            }
                        };
                    }

                // Loop the animation function
                var runAnimation = setInterval(animateScroll, 16);
            };

            // Define smooth scroll links
            var scrollToggle = document.querySelectorAll('.scroll');

            // For each smooth scroll link
            [].forEach.call(scrollToggle, function (toggle) {

                // When the smooth scroll link is clicked
                toggle.addEventListener('click', function (e) {

                    // Prevent the default link behavior
                    e.preventDefault();
                    // Get anchor link and calculate distance from the top
                    var dataID = toggle.getAttribute('href');
                    var dataTarget = document.querySelector(dataID);
                    var dataSpeed = toggle.getAttribute('data-speed');

                    // If the anchor exists
                    if (dataTarget) {
                        // Scroll to the anchor
                        actionMenu();
                        smoothScroll(dataTarget, dataSpeed || 1000);
                    }
                }, false);
            });

            // Inject service worker when supported
            if ('serviceWorker' in navigator) {
                navigator.serviceWorker.register('/service-worker.js').then(function () {
                    console.log('Service Worker registered');
                });
            }
        })();
    }
})();

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhcHAvYXNzZXRzL3NjcmlwdHMvbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUE7QUFDQzs7QUFFRCxDQUFDLFlBQVc7O0FBRVg7O0FBRUE7O0FBQ0csUUFBSyxtQkFBbUIsUUFBbkIsSUFBK0Isc0JBQXNCLE1BQXJELElBQStELE1BQU0sU0FBTixDQUFnQixPQUFwRixFQUE4RjtBQUFBOztBQUVoRztBQUNBLGdCQUFJLGFBQWEsU0FBYixVQUFhLEdBQVU7QUFDMUIseUJBQVMsY0FBVCxDQUF3QixTQUF4QixFQUFtQyxTQUFuQyxDQUE2QyxNQUE3QyxDQUFvRCxNQUFwRDtBQUNBLHlCQUFTLGNBQVQsQ0FBd0IsZ0JBQXhCLEVBQTBDLFNBQTFDLENBQW9ELE1BQXBELENBQTJELFFBQTNEO0FBQ0EsYUFIRDs7QUFLQSxxQkFBUyxjQUFULENBQXdCLGdCQUF4QixFQUEwQyxnQkFBMUMsQ0FBMkQsT0FBM0QsRUFBb0UsVUFBcEU7O0FBRU07QUFDQSxnQkFBSSxlQUFlLFNBQWYsWUFBZSxDQUFVLE1BQVYsRUFBa0IsUUFBbEIsRUFBNEI7O0FBRTNDO0FBQ0Esb0JBQUksZ0JBQWdCLE9BQU8sV0FBM0I7QUFDQSxvQkFBSSxjQUFjLE9BQU8sU0FBekI7QUFDQSxvQkFBSSxXQUFXLGNBQWMsYUFBN0I7QUFDQSxvQkFBSSxhQUFhLFlBQVUsV0FBUyxFQUFuQixDQUFqQjtBQUNBLG9CQUFJLHNCQUFKOztBQUVBO0FBQ0Esb0JBQUksZ0JBQWdCLFNBQWhCLGFBQWdCLEdBQVk7QUFDNUIsMkJBQU8sUUFBUCxDQUFnQixDQUFoQixFQUFtQixVQUFuQjtBQUNBO0FBQ0gsaUJBSEQ7O0FBS0E7QUFDQSxvQkFBSyxjQUFjLENBQW5CLEVBQXVCO0FBQ25CO0FBQ0Esb0NBQWdCLHlCQUFZO0FBQ3hCLDRCQUFJLFlBQVksT0FBTyxXQUF2QjtBQUNBLDRCQUFNLGFBQWMsY0FBYyxVQUE3QixJQUErQyxPQUFPLFdBQVAsR0FBcUIsU0FBdEIsSUFBb0MsU0FBUyxJQUFULENBQWMsWUFBckcsRUFBcUg7QUFDakgsMENBQWMsWUFBZDtBQUNIO0FBQ0oscUJBTEQ7QUFNSDtBQUNEO0FBVEEscUJBVUs7QUFDRDtBQUNBLHdDQUFnQix5QkFBWTtBQUN4QixnQ0FBSSxZQUFZLE9BQU8sV0FBdkI7QUFDQSxnQ0FBSyxjQUFjLGVBQWUsQ0FBN0IsQ0FBTCxFQUF1QztBQUNuQyw4Q0FBYyxZQUFkO0FBQ0g7QUFDSix5QkFMRDtBQU1IOztBQUVEO0FBQ0Esb0JBQUksZUFBZSxZQUFZLGFBQVosRUFBMkIsRUFBM0IsQ0FBbkI7QUFFSCxhQXZDRDs7QUF5Q0E7QUFDQSxnQkFBSSxlQUFlLFNBQVMsZ0JBQVQsQ0FBMEIsU0FBMUIsQ0FBbkI7O0FBRUE7QUFDQSxlQUFHLE9BQUgsQ0FBVyxJQUFYLENBQWdCLFlBQWhCLEVBQThCLFVBQVUsTUFBVixFQUFrQjs7QUFFNUM7QUFDQSx1QkFBTyxnQkFBUCxDQUF3QixPQUF4QixFQUFpQyxVQUFTLENBQVQsRUFBWTs7QUFFekM7QUFDQSxzQkFBRSxjQUFGO0FBQ0E7QUFDQSx3QkFBSSxTQUFTLE9BQU8sWUFBUCxDQUFvQixNQUFwQixDQUFiO0FBQ0Esd0JBQUksYUFBYSxTQUFTLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBakI7QUFDQSx3QkFBSSxZQUFZLE9BQU8sWUFBUCxDQUFvQixZQUFwQixDQUFoQjs7QUFFQTtBQUNBLHdCQUFJLFVBQUosRUFBZ0I7QUFDWjtBQUNIO0FBQ0cscUNBQWEsVUFBYixFQUF5QixhQUFhLElBQXRDO0FBQ0g7QUFFSixpQkFoQkQsRUFnQkcsS0FoQkg7QUFrQkgsYUFyQkQ7O0FBdUJBO0FBQ0EsZ0JBQUcsbUJBQW1CLFNBQXRCLEVBQWlDO0FBQ3RDLDBCQUFVLGFBQVYsQ0FDRSxRQURGLENBQ1csb0JBRFgsRUFFRSxJQUZGLENBRU8sWUFBVztBQUFFLDRCQUFRLEdBQVIsQ0FBWSwyQkFBWjtBQUEyQyxpQkFGL0Q7QUFHQTtBQXBGK0Y7QUFxRjdGO0FBRUosQ0E1RkQiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiLyoganNoaW50IGJyb3dzZXI6IHRydWUgKi9cbiAvKmpzaGludCB1bnVzZWQ6ZmFsc2UqL1xuXG4oZnVuY3Rpb24oKSB7XG5cblx0J3VzZSBzdHJpY3QnO1xuXG5cdC8vIEZlYXR1cmUgVGVzdFxuICAgIGlmICggJ3F1ZXJ5U2VsZWN0b3InIGluIGRvY3VtZW50ICYmICdhZGRFdmVudExpc3RlbmVyJyBpbiB3aW5kb3cgJiYgQXJyYXkucHJvdG90eXBlLmZvckVhY2ggKSB7XG5cdFxuXHRcdC8vIEZ1bmN0aW9uIHRvIHRvZ2dsZSBtZW51IG1vYmlsZVxuXHRcdGxldCBhY3Rpb25NZW51ID0gZnVuY3Rpb24oKXtcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ2ctbWVudVwiKS5jbGFzc0xpc3QudG9nZ2xlKFwib3BlblwiKTtcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ2ctbWVudS1tb2JpbGVcIikuY2xhc3NMaXN0LnRvZ2dsZShcIm9wZW5lZFwiKTtcblx0XHR9O1xuXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJnZy1tZW51LW1vYmlsZVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgYWN0aW9uTWVudSk7XG5cbiAgICAgICAgLy8gRnVuY3Rpb24gdG8gYW5pbWF0ZSB0aGUgc2Nyb2xsXG4gICAgICAgIGxldCBzbW9vdGhTY3JvbGwgPSBmdW5jdGlvbiAoYW5jaG9yLCBkdXJhdGlvbikge1xuXG4gICAgICAgICAgICAvLyBDYWxjdWxhdGUgaG93IGZhciBhbmQgaG93IGZhc3QgdG8gc2Nyb2xsXG4gICAgICAgICAgICBsZXQgc3RhcnRMb2NhdGlvbiA9IHdpbmRvdy5wYWdlWU9mZnNldDtcbiAgICAgICAgICAgIGxldCBlbmRMb2NhdGlvbiA9IGFuY2hvci5vZmZzZXRUb3A7XG4gICAgICAgICAgICBsZXQgZGlzdGFuY2UgPSBlbmRMb2NhdGlvbiAtIHN0YXJ0TG9jYXRpb247XG4gICAgICAgICAgICBsZXQgaW5jcmVtZW50cyA9IGRpc3RhbmNlLyhkdXJhdGlvbi8xNik7XG4gICAgICAgICAgICBsZXQgc3RvcEFuaW1hdGlvbjtcblxuICAgICAgICAgICAgLy8gU2Nyb2xsIHRoZSBwYWdlIGJ5IGFuIGluY3JlbWVudCwgYW5kIGNoZWNrIGlmIGl0J3MgdGltZSB0byBzdG9wXG4gICAgICAgICAgICBsZXQgYW5pbWF0ZVNjcm9sbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cuc2Nyb2xsQnkoMCwgaW5jcmVtZW50cyk7XG4gICAgICAgICAgICAgICAgc3RvcEFuaW1hdGlvbigpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgLy8gSWYgc2Nyb2xsaW5nIGRvd25cbiAgICAgICAgICAgIGlmICggaW5jcmVtZW50cyA+PSAwICkge1xuICAgICAgICAgICAgICAgIC8vIFN0b3AgYW5pbWF0aW9uIHdoZW4geW91IHJlYWNoIHRoZSBhbmNob3IgT1IgdGhlIGJvdHRvbSBvZiB0aGUgcGFnZVxuICAgICAgICAgICAgICAgIHN0b3BBbmltYXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCB0cmF2ZWxsZWQgPSB3aW5kb3cucGFnZVlPZmZzZXQ7XG4gICAgICAgICAgICAgICAgICAgIGlmICggKHRyYXZlbGxlZCA+PSAoZW5kTG9jYXRpb24gLSBpbmNyZW1lbnRzKSkgfHwgKCh3aW5kb3cuaW5uZXJIZWlnaHQgKyB0cmF2ZWxsZWQpID49IGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0KSApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwocnVuQW5pbWF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBJZiBzY3JvbGxpbmcgdXBcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFN0b3AgYW5pbWF0aW9uIHdoZW4geW91IHJlYWNoIHRoZSBhbmNob3IgT1IgdGhlIHRvcCBvZiB0aGUgcGFnZVxuICAgICAgICAgICAgICAgIHN0b3BBbmltYXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCB0cmF2ZWxsZWQgPSB3aW5kb3cucGFnZVlPZmZzZXQ7XG4gICAgICAgICAgICAgICAgICAgIGlmICggdHJhdmVsbGVkIDw9IChlbmRMb2NhdGlvbiB8fCAwKSApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwocnVuQW5pbWF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIExvb3AgdGhlIGFuaW1hdGlvbiBmdW5jdGlvblxuICAgICAgICAgICAgbGV0IHJ1bkFuaW1hdGlvbiA9IHNldEludGVydmFsKGFuaW1hdGVTY3JvbGwsIDE2KTtcbiAgICAgICBcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBEZWZpbmUgc21vb3RoIHNjcm9sbCBsaW5rc1xuICAgICAgICBsZXQgc2Nyb2xsVG9nZ2xlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNjcm9sbCcpO1xuXG4gICAgICAgIC8vIEZvciBlYWNoIHNtb290aCBzY3JvbGwgbGlua1xuICAgICAgICBbXS5mb3JFYWNoLmNhbGwoc2Nyb2xsVG9nZ2xlLCBmdW5jdGlvbiAodG9nZ2xlKSB7XG5cbiAgICAgICAgICAgIC8vIFdoZW4gdGhlIHNtb290aCBzY3JvbGwgbGluayBpcyBjbGlja2VkXG4gICAgICAgICAgICB0b2dnbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBQcmV2ZW50IHRoZSBkZWZhdWx0IGxpbmsgYmVoYXZpb3JcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgLy8gR2V0IGFuY2hvciBsaW5rIGFuZCBjYWxjdWxhdGUgZGlzdGFuY2UgZnJvbSB0aGUgdG9wXG4gICAgICAgICAgICAgICAgbGV0IGRhdGFJRCA9IHRvZ2dsZS5nZXRBdHRyaWJ1dGUoJ2hyZWYnKTtcbiAgICAgICAgICAgICAgICBsZXQgZGF0YVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZGF0YUlEKTtcbiAgICAgICAgICAgICAgICBsZXQgZGF0YVNwZWVkID0gdG9nZ2xlLmdldEF0dHJpYnV0ZSgnZGF0YS1zcGVlZCcpO1xuXG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIGFuY2hvciBleGlzdHNcbiAgICAgICAgICAgICAgICBpZiAoZGF0YVRhcmdldCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBTY3JvbGwgdG8gdGhlIGFuY2hvclxuICAgICAgICAgICAgICAgIFx0YWN0aW9uTWVudSgpO1xuICAgICAgICAgICAgICAgICAgICBzbW9vdGhTY3JvbGwoZGF0YVRhcmdldCwgZGF0YVNwZWVkIHx8IDEwMDApO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSwgZmFsc2UpO1xuXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEluamVjdCBzZXJ2aWNlIHdvcmtlciB3aGVuIHN1cHBvcnRlZFxuICAgICAgICBpZignc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yKSB7XG5cdFx0XHRuYXZpZ2F0b3Iuc2VydmljZVdvcmtlclxuXHRcdFx0XHQucmVnaXN0ZXIoJy9zZXJ2aWNlLXdvcmtlci5qcycpXG5cdFx0XHRcdC50aGVuKGZ1bmN0aW9uKCkgeyBjb25zb2xlLmxvZygnU2VydmljZSBXb3JrZXIgcmVnaXN0ZXJlZCcpOyB9KTtcblx0XHR9XG4gICAgfVxuXG59KSgpOyJdfQ==
